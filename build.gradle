plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.studycoAchl'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // === Database ===
    implementation 'com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.15.0'
    implementation 'mysql:mysql-connector-java:8.0.33'

    // === Core Spring Boot Starters ===
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // === Security & OAuth ===
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // === JWT (인증 기능용) ===
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // === WebSocket (실시간 채팅 기능) ===
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // === AI & OpenAI Integration ===
    implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'

    // === PDF 처리 (요약 기능용) ===
    implementation 'org.apache.pdfbox:pdfbox:2.0.29'

    // === API Documentation ===
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // === JSON Processing ===
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // === Environment Variables ===
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // === Lombok ===
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // === Development Tools ===
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // === Testing ===
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.h2database', module: 'h2'
    }
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// === Task Configuration ===
tasks.named('test') {
    useJUnitPlatform()
}

// === Build Configuration ===
tasks.named('bootRun') {
    // .env 파일이 있으면 자동으로 로드
    if (file('.env').exists()) {
        doFirst {
            file('.env').readLines().each {
                def (key, value) = it.tokenize('=')
                if (key && value) {
                    environment key, value
                }
            }
        }
    }
}

configurations {
    all*.exclude group: 'com.h2database', module: 'h2'
}

// === JAR 설정 ===
bootJar {
    archiveFileName = "${project.name}-${project.version}.jar"
    manifest {
        attributes(
                'Main-Class': 'org.springframework.boot.loader.launch.JarLauncher'
        )
    }
}